import java.io.*;
import java.security.SecureRandom;

public class PasswordGenerator {

    // Character sets
    static final String UPPER = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
    static final String LOWER = "abcdefghijklmnopqrstuvwxyz";
    static final String DIGITS = "0123456789";
    static final String SPECIAL = "!@#$%^&*()-_=+[]{}|;:,.<>?/";

    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

        System.out.print("Enter desired password length: ");
        int length = Integer.parseInt(br.readLine());

        System.out.print("Include uppercase letters? (yes/no): ");
        boolean useUpper = br.readLine().equalsIgnoreCase("yes");

        System.out.print("Include lowercase letters? (yes/no): ");
        boolean useLower = br.readLine().equalsIgnoreCase("yes");

        System.out.print("Include numbers? (yes/no): ");
        boolean useDigits = br.readLine().equalsIgnoreCase("yes");

        System.out.print("Include special characters? (yes/no): ");
        boolean useSpecial = br.readLine().equalsIgnoreCase("yes");

        String password = generatePassword(length, useUpper, useLower, useDigits, useSpecial);
        
        if (password != null) {
            System.out.println("Generated Password: " + password);
        } else {
            System.out.println("Error: You must select at least one character type.");
        }
    }

    public static String generatePassword(int length, boolean useUpper, boolean useLower, boolean useDigits, boolean useSpecial) {
        StringBuilder characterPool = new StringBuilder();

        if (useUpper) characterPool.append(UPPER);
        if (useLower) characterPool.append(LOWER);
        if (useDigits) characterPool.append(DIGITS);
        if (useSpecial) characterPool.append(SPECIAL);

        if (characterPool.length() == 0) return null;

        SecureRandom random = new SecureRandom();
        StringBuilder password = new StringBuilder();

        for (int i = 0; i < length; i++) {
            int index = random.nextInt(characterPool.length());
            password.append(characterPool.charAt(index));
        }

        return password.toString();
    }
}
